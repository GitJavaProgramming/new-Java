
java javac javap

PS D:\IdeaProjects\corejava\src\main\java\org\pp\java8\concurrent\thread> javac -d . -encoding utf-8 .\ThreadTest.java
    -d选项：若此选项省略，那么默认在当前目录下生成.class文件，并且没有生成包文件夹
PS D:\IdeaProjects\corejava\src\main\java\org\pp\java8\concurrent\thread> java ThreadTest
错误: 找不到或无法加载主类 ThreadTest
PS D:\IdeaProjects\corejava\src\main\java\org\pp\java8\concurrent\thread> java org.pp.java8.concurrent.thread.ThreadTest
file:/D:/IdeaProjects/corejava/src/main/java/org/pp/java8/concurrent/thread/org/pp/java8/concurrent/thread/
java.lang.ThreadGroup[name=main,maxpri=10]
    Thread[main,5,main]
[main, 1, RUNNABLE, 5, false]
**************************************************************
Thread instantiate State :NEW
java.lang.ThreadGroup[name=main,maxpri=10]
PS D:\IdeaProjects\corejava\src\main\java\org\pp\java8\concurrent\thread> javac
用法: javac <options> <source files>
其中, 可能的选项包括:
  -g                         生成所有调试信息
  -g:none                    不生成任何调试信息
  -g:{lines,vars,source}     只生成某些调试信息
  -nowarn                    不生成任何警告
  -verbose                   输出有关编译器正在执行的操作的消息
  -deprecation               输出使用已过时的 API 的源位置
  -classpath <路径>            指定查找用户类文件和注释处理程序的位置
  -cp <路径>                   指定查找用户类文件和注释处理程序的位置
  -sourcepath <路径>           指定查找输入源文件的位置
  -bootclasspath <路径>        覆盖引导类文件的位置
  -extdirs <目录>              覆盖所安装扩展的位置
  -endorseddirs <目录>         覆盖签名的标准路径的位置
  -proc:{none,only}          控制是否执行注释处理和/或编译。
  -processor <class1>[,<class2>,<class3>...] 要运行的注释处理程序的名称; 绕过默认的搜索进程
  -processorpath <路径>        指定查找注释处理程序的位置
  -parameters                生成元数据以用于方法参数的反射
  -d <目录>                    指定放置生成的类文件的位置
  -s <目录>                    指定放置生成的源文件的位置
  -h <目录>                    指定放置生成的本机标头文件的位置
  -implicit:{none,class}     指定是否为隐式引用文件生成类文件
  -encoding <编码>             指定源文件使用的字符编码
  -source <发行版>              提供与指定发行版的源兼容性
  -target <发行版>              生成特定 VM 版本的类文件
  -profile <配置文件>            请确保使用的 API 在指定的配置文件中可用
  -version                   版本信息
  -help                      输出标准选项的提要
  -A关键字[=值]                  传递给注释处理程序的选项
  -X                         输出非标准选项的提要
  -J<标记>                     直接将 <标记> 传递给运行时系统
  -Werror                    出现警告时终止编译
  @<文件名>                     从文件读取选项和文件名

PS D:\IdeaProjects\corejava\src\main\java\org\pp\java8\concurrent\thread> javac -g -verbose -encoding utf-8 ThreadTest.java
[解析开始时间 RegularFileObject[ThreadTest.java]]
[解析已完成, 用时 29 毫秒]
[源文件的搜索路径: .]
[类文件的搜索路径: D:\soft\Java\jdk1.8.0_221\jre\lib\resources.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\rt.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\sunrsasign.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\jsse.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\jce.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\charsets.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\jfr.jar,D:\soft\Java\jdk1.8.0_221\jre\classes,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\access-bridge-64.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\cldrdata.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\dnsns.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\jaccess.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\jfxrt.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\localedata.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\nashorn.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\sunec.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\sunjce_provider.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\sunmscapi.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\sunpkcs11.jar,D:\soft\Java\jdk1.8.0_221\jre\lib\ext\zipfs.jar,.]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/util/List.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Object.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/String.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Thread.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/sun/misc/Contended.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class)]]
[正在检查org.pp.java8.concurrent.thread.ThreadTest]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Class.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericDeclaration.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/reflect/AnnotatedElement.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/net/URL.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Byte.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Character.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Short.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Long.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Float.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Double.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Void.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/System.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/io/FilterOutputStream.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Runnable.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Thread$State.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/ThreadGroup.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Thread$UncaughtExceptionHandler.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/util/Collection.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/util/AbstractList.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/invoke/LambdaMetafactory.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/invoke/MethodHandles.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/invoke/MethodHandles$Lookup.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/invoke/MethodType.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/invoke/MethodHandle.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/Number.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/AbstractStringBuilder.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class)]]
[正在加载ZipFileIndexFileObject[D:\soft\Java\jdk1.8.0_221\lib\ct.sym(META-INF/sym/rt.jar/java/lang/invoke/CallSite.class)]]
[已写入RegularFileObject[ThreadTest.class]]
[共 517 毫秒]

PS C:\Windows\system32> java
用法: java [-options] class [args...]
           (执行类)
   或  java [-options] -jar jarfile [args...]
           (执行 jar 文件)
其中选项包括:
    -d32          使用 32 位数据模型 (如果可用)
    -d64          使用 64 位数据模型 (如果可用)
    -server       选择 "server" VM
                  默认 VM 是 server.

    -cp <目录和 zip/jar 文件的类搜索路径>
    -classpath <目录和 zip/jar 文件的类搜索路径>
                  用 ; 分隔的目录, JAR 档案
                  和 ZIP 档案列表, 用于搜索类文件。
    -D<名称>=<值>
                  设置系统属性
    -verbose:[class|gc|jni]
                  启用详细输出
    -version      输出产品版本并退出
    -version:<值>
                  警告: 此功能已过时, 将在
                  未来发行版中删除。
                  需要指定的版本才能运行
    -showversion  输出产品版本并继续
    -jre-restrict-search | -no-jre-restrict-search
                  警告: 此功能已过时, 将在
                  未来发行版中删除。
                  在版本搜索中包括/排除用户专用 JRE
    -? -help      输出此帮助消息
    -X            输出非标准选项的帮助
    -ea[:<packagename>...|:<classname>]
    -enableassertions[:<packagename>...|:<classname>]
                  按指定的粒度启用断言
    -da[:<packagename>...|:<classname>]
    -disableassertions[:<packagename>...|:<classname>]
                  禁用具有指定粒度的断言
    -esa | -enablesystemassertions
                  启用系统断言
    -dsa | -disablesystemassertions
                  禁用系统断言
    -agentlib:<libname>[=<选项>]
                  加载本机代理库 <libname>, 例如 -agentlib:hprof
                  另请参阅 -agentlib:jdwp=help 和 -agentlib:hprof=help
    -agentpath:<pathname>[=<选项>]
                  按完整路径名加载本机代理库
    -javaagent:<jarpath>[=<选项>]
                  加载 Java 编程语言代理, 请参阅 java.lang.instrument
    -splash:<imagepath>
                  使用指定的图像显示启动屏幕
有关详细信息, 请参阅 http://www.oracle.com/technetwork/java/javase/documentation/index.html。

PS C:\Windows\system32> javap
用法: javap <options> <classes>
其中, 可能的选项包括:
  -help  --help  -?        输出此用法消息
  -version                 版本信息
  -v  -verbose             输出附加信息
  -l                       输出行号和本地变量表
  -public                  仅显示公共类和成员
  -protected               显示受保护的/公共类和成员
  -package                 显示程序包/受保护的/公共类
                           和成员 (默认)
  -p  -private             显示所有类和成员
  -c                       对代码进行反汇编
  -s                       输出内部类型签名
  -sysinfo                 显示正在处理的类的
                           系统信息 (路径, 大小, 日期, MD5 散列)
  -constants               显示最终常量
  -classpath <path>        指定查找用户类文件的位置
  -cp <path>               指定查找用户类文件的位置
  -bootclasspath <path>    覆盖引导类文件的位置

PS D:\IdeaProjects\corejava\src\main\java\org\pp\java8\concurrent\thread> javap -v .\ThreadTest.class
可以看到字节码的详细信息

下面命令可以查看反汇编信息，字节码指令
PS D:\IdeaProjects\corejava\src\main\java\org\pp\java8\concurrent\thread> javap -c .\ThreadTest.class
Compiled from "ThreadTest.java"
public class org.pp.java8.concurrent.thread.ThreadTest {
  public org.pp.java8.concurrent.thread.ThreadTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void main(java.lang.String[]);
    Code:
       0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
       3: ldc           #3                  // class org/pp/java8/concurrent/thread/ThreadTest
       5: ldc           #4                  // String
       7: invokevirtual #5                  // Method java/lang/Class.getResource:(Ljava/lang/String;)Ljava/net/URL;
      10: invokevirtual #6                  // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
      13: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      16: invokestatic  #8                  // Method printThreadInfo:(Ljava/lang/Thread;)V
      19: invokestatic  #9                  // Method currentThreadFieldTest:()V
      22: return

  public static void currentThreadFieldTest();
    Code:
       0: new           #10                 // class java/lang/Thread
       3: dup
       4: invokedynamic #11,  0             // InvokeDynamic #0:run:()Ljava/lang/Runnable;
       9: invokespecial #12                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      12: astore_0
      13: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
      16: new           #13                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #15                 // String Thread instantiate State :
      25: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #17                 // Method java/lang/Thread.getState:()Ljava/lang/Thread$State;
      32: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      41: aload_0
      42: iconst_1
      43: invokevirtual #21                 // Method java/lang/Thread.setDaemon:(Z)V
      46: aload_0
      47: invokevirtual #22                 // Method java/lang/Thread.start:()V
      50: return
}



